---
import Head from "@/components/Head.astro";
import Header from "@/components/Header.astro";
import Footer from "@/components/Footer.astro";
import "@/styles/global.css";

interface Props {
  pageTitle?: string;
}

const { pageTitle = "" } = Astro.props;
---

<html lang="en">
  <Head pageTitle={pageTitle} />
  <body class="flex flex-col w-full max-w-full mx-auto min-h-dvh">
    <Header />
    <main class="mx-auto w-full grow">
      <slot />
    </main>
    <Footer />
    <!-- Dark mode -->
    <script is:inline>
      const theme = (() => {
        if (
          typeof localStorage !== "undefined" &&
          localStorage.getItem("theme")
        ) {
          return localStorage.getItem("theme");
        }
        if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
          return "dark";
        }
        return "light";
      })();

      if (theme === "light") {
        document.documentElement.classList.remove("dark");
      } else {
        document.documentElement.classList.add("dark");
      }

      window.localStorage.setItem("theme", theme);

      const handleToggleClick = () => {
        const element = document.documentElement;
        element.classList.toggle("dark");

        const isDark = element.classList.contains("dark");
        localStorage.setItem("theme", isDark ? "dark" : "light");
      };

      const headerThemeButton = document.getElementById("header-theme-button");
      const menuThemeButton = document.getElementById("menu-theme-button");
      headerThemeButton?.addEventListener("click", handleToggleClick);
      menuThemeButton?.addEventListener("click", handleToggleClick);

      // Add back event listeners and set dark mode again if
      // Astro view transition occurs
      document.addEventListener("astro:after-swap", () => {
        if (localStorage.getItem("theme") === "dark")
          document.documentElement.classList.toggle("dark", true);

        if (!headerThemeButton.hasAttribute("onclick")) {
          headerThemeButton.addEventListener("click", handleToggleClick);
        }

        if (!menuThemeButton.hasAttribute("onclick")) {
          menuThemeButton.addEventListener("click", handleToggleClick);
        }
      });
    </script>
    <!-- GLightbox -->
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/glightbox/dist/css/glightbox.min.css"
    />
    <script
      src="https://cdn.jsdelivr.net/gh/mcstudios/glightbox/dist/js/glightbox.min.js"
    ></script>
    <script>
      import GLightbox from "glightbox";
      const lightbox = GLightbox({
        closeOnOutsideClick: true,
        touchNavigation: true,
        loop: true,
        autoplayVideos: true,
      });
    </script>
  </body>
</html>
